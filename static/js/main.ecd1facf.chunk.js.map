{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","Message","text","color","Message_Container","Poster_templateObject","Image","Poster_templateObject2","props","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","upcoming","popular","nowPlaying","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","this","setState","data","results","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","includes","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Content","DetailPresenter_templateObject2","Cover","DetailPresenter_templateObject3","bgImage","Backdrop","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Detail","Search","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ecd1facf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px\n    }\n`;\n\nconst Title= styled.span`\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`    \n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px\n`;\n\nexport default () => ( \n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color : $(props => props.color);\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size: 12px;s\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    };\n`;\n\nconst Title = styled.span`\n    display: block;\n    font-size: 12px;\n    marign-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5)\n`;\n\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` \n                : require(\"../assets/noPosterSmall.png\")} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                         ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 15)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\nexport default Poster;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Section from 'Components/Section'\nimport Loader from '../../Components/Loader';\nimport Helmet from 'react-helmet';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({upcoming, popular, nowPlaying, loading, error}) => (\n    \n    <>\n    <Helmet>\n        <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n        <Loader/> \n    ) : (\n    // ES6 형태\n    // var HomePresenter = function() {\n    // }\n    // console.log(upcoming, popular, nowPlaying, loading, error)\n    <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie => (\n                    // <span key={movie.id}>{movie.title}</span>\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                        // 년도만 가져오면 되니까\n                        isMovie={true}\n                    />\n            ))}\n            </Section>\n        )}\n        {/* 주석:\n            nowPlaying.map(movie => movie.title)\n            movie라는 이름을 지어주고 movie에서 title을 뺴오자\n        */}\n        {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming\">\n                {upcoming.map(movie => (\n                    // <span key={movie.id}>{movie.title}</span>\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                        // 년도만 가져오면 되니까\n                        isMovie={true}\n                    />\n            ))}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular movies\">\n                {popular.map(movie => (\n                    // <span key={movie.id}>{movie.title}</span>\n                    <Poster\n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date.substring(0, 4)}\n                        // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                        // 년도만 가져오면 되니까\n                        isMovie={true}\n                    />\n            ))}\n            </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n    </Container>\n    )}\n    </>\n);\n \n\nHomePresenter.propTypes = {\n    upcoming: PropTypes.array, \n    popular: PropTypes.array, \n    nowPlaying: PropTypes.array, \n    loading: PropTypes.bool.isRequired, \n    error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"8ade9cc04b163e330ac46663032b5719\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import HomeContainer from './HomeContainer'\n\n\nexport default HomeContainer","import HomePresenter from './HomePresenter'\nimport React from 'react'\nimport {moviesApi} from 'api'\n\nclass HomeContainer extends React.Component {\n\n    state = {\n        upcoming : null,\n        nowPlaying : null,\n        popular : null,\n        loading : true,\n        error : null\n    }\n\n    async componentDidMount() {\n\n        try {\n            const upcoming = await moviesApi.upcoming()\n            const nowPlaying = await moviesApi.nowPlaying()\n            const popular = await moviesApi.popular()\n            this.setState({\n                upcoming : upcoming.data.results,\n                nowPlaying : nowPlaying.data.results,\n                popular: popular.data.results\n            })\n        }catch {\n            this.setState({\n                error : \"cant't find\"\n            })\n        }finally{\n            // (try, catcth 실행하고 마지막에 무조건 finally 실행해)\n            this.setState({\n                loading : false\n            })\n        }\n    }\n\n\n\n    render() {\n        // console.log(this.state);\n        \n        const {upcoming, popular, nowPlaying, loading, error} = this.state\n\n        return (\n            <HomePresenter \n                upcoming={upcoming}\n                popular={popular}\n                nowPlaying={nowPlaying}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}\n\nexport default HomeContainer;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Helmet from 'react-helmet';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\n    <>\n    <Helmet>\n        <title>TV shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n        <Loader /> \n    ) : (\n        <Container>\n            {topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(show => (\n                        // <span key={show.id}>{show.name}</span>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date.substring(0, 4)}\n                            // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                            // 년도만 가져오면 되니까\n                        />\n                    ))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today\">\n                    {airingToday.map(show => (\n                        // <span key={show.id}>{show.name}</span>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date.substring(0, 4)}\n                            // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                            // 년도만 가져오면 되니까\n                        />\n                    ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular TV\">\n                    {popular.map(show => (\n                        // <span key={show.id}>{show.name}</span>\n                        <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date.substring(0, 4)}\n                            // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                            // 년도만 가져오면 되니까\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n        </Container>\n        )}\n    </>\n);\n\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array, \n    popular: PropTypes.array, \n    airingToday: PropTypes.array, \n    loading: PropTypes.bool.isRequired, \n    error: PropTypes.string\n}\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer'\n\nexport default TVContainer","import TVPresenter from './TVPresenter'\nimport React from 'react'\nimport {tvApi} from 'api'\n\nclass TVContainer extends React.Component {\n\n    state = {\n        topRated : null,\n        popular: null,\n        airingToday: null,\n        error : null,\n        loading : true\n    };\n\n    async componentDidMount (){\n        try{\n            const topRated = await tvApi.topRated()\n            const popular = await tvApi.popular()\n            const airingToday = await tvApi.airingToday()\n            this.setState({\n                topRated : topRated.data.results,\n                popular : popular.data.results,\n                airingToday : airingToday.data.results\n            })\n        }catch{\n            this.setState({\n                error : \"can't find TV information\"\n            })\n        }finally{\n            this.setState({\n                loading : false\n            })\n        }\n\n    }\n\n    render(){\n        // console.log(this.state);\n        \n        const {topRated, popular, airingToday, loading, error} = this.state\n\n        return (\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}\n\nexport default TVContainer;","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: #fff;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    background: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n        ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(( {location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\" || pathname.includes(\"/movie\")}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\" || pathname.includes(\"/show\") }>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    loading,\n    searchTerm,\n    handleSubmit,\n    error,\n    updateTerm\n  }) => (\n    <Container>\n      <Helmet>\n        <title>Search | Nomflix</title>\n      </Helmet>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map(movie => (\n                // <span key={movie.id}>{movie.title}</span>\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                  // 년도만 가져오면 되니까\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map(show => (\n                // <span key={show.id}>{show.name}</span>\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  imageUrl={show.poster_path}\n                  title={show.original_name}\n                  rating={show.vote_average}\n                  year={show.first_air_date.substring(0, 4)}\n                  // substring 을 이용하여 원하는 만큼의 길이를 자른다.\n                  // 년도만 가져오면 되니까\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing found\" color=\"#95a5a6\" />\n            )}\n        </>\n      )}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer'\n\n\nexport default SearchContainer","import React from 'react'\nimport SearchPresenter from './SearchPresenter'\nimport {moviesApi, tvApi} from 'api'\n\n\nexport default class extends React.Component {\n    state = {\n        movieResults :null,\n        tvResults : null,\n        searchTerm : \"\",\n        loading : false,\n        error : null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        // console.log(event)\n        const {\n            target: { value }\n        } = event;\n        // console.log(value);\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    // componentDidMount(){\n    //     this.handleSubmit();\n    // }\n\n    searchByTerm = async () => {\n        // const searchTerm = this.state.searchTerm\n        const { searchTerm } = this.state; // 왼쪽에는 쓰고싶은거를 가져오고 오른쪽은 this.state전체를 가져옴 \n        //const movieResults = await moviesApi.search(searchTerm) //searchTerm 이라는 param을 받아옴\n        // console.log(movieResults)\n        // data 안에 results를 movieResults 로 이름을 바꿔줌\n        // this.setState({\n            // movieResults\n            // movieResults : movieResults  왼쪽은 상단의 state값을 바꾸려는거고, 오른쪽은 \n            // 바로 윗줄의 movieResults 값을 가져오는건데\n            // 이름이 같으니까 한번만 써준다\n        // }) \n        this.setState({ loading: true});\n        try {\n            // throw Error(); // 에러 던져줄 때 \n            const { data : {results : movieResults} } = await moviesApi.search(searchTerm)\n            const { data : {results : tvResults} } = await tvApi.search(searchTerm)\n            this.setState({ movieResults, tvResults })\n        } catch {\n            this.setState({ error: \"Can't find results\" })\n        } finally {\n            this.setState({ loading: false });\n        }\n    };\n\n\n    render() {\n        // console.log(this.state);\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                loading={loading}\n                error={error}\n                searchTerm={searchTerm}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opcacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>(\n    <>\n    <Helmet><title>Loading...</title></Helmet>\n    {loading ? (\n        <Loader/>\n    ) : (\n    <Container>\n        <Helmet>\n            <title>{result.original_title \n                ? result.original_title \n                : result.original_name}\n            </title>\n        </Helmet>\n        <Backdrop \n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            />\n        <Content>\n            <Cover \n                bgImage={\n                    result.poster_path \n                    ? `https://image.tmdb.org/t/p/original${result.poster_path}` \n                    : require(\"../../assets/noPosterSmall.png\")\n                }\n            />\n            <Data>\n                <Title>\n                    {result.original_title \n                        ? result.original_title \n                        : result.original_name}\n                    {/*\n                        오리지널 타이틀이 있는지 확인해봐\n                        있으면 오리지널 타이틀(movie)넣고\n                        없으면 오리지널 네임(tv show)을 넣어\n                        조건 ? true : false \n                    */}\n                </Title>\n                <ItemContainer>\n                    <Item>\n                        {result.release_date \n                            ? result.release_date.substring(0,4) \n                            : result.first_air_date.substring(0,4)}\n                    </Item>\n                    <Divider>·</Divider>\n                    <Item>\n                        {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                    </Item>\n                    <Divider>·</Divider>\n                    <Item>\n                        {result.genres && \n                            result.genres.map((genre, index) => \n                                index === result.genres.length - 1 \n                                    ? genre.name \n                                    : `${genre.name}/`\n                        )}\n                    </Item>\n                </ItemContainer>\n                <Overview>\n                    {result.overview}\n                </Overview>\n            </Data>\n        </Content>\n    </Container>\n    )}\n    </>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer'\n\n\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter  from './DetailPresenter';\nimport { moviesApi, tvApi } from 'api';\n// api 에서 moviesApi 라는 객체를 가져오니까 {} 안에 써줘야 객체\n\nexport default class extends React.Component {\n\n    // constructor 라는 함수를 재정의 : 재정의할 때는 (){}\n    // 생성자 : 재정의만 안햇을 뿐이지, 원래 모든 클래스들은 존재하고 실행됨.\n    constructor(props){\n        // props 로 주고받음\n        super(props);\n        // console.log(props);\n        const { location: {pathname} } = props;\n        //왼쪽: location 에 들어가면 pathname이 있는데 그걸 가져와\n        //오른쪽: props에서 가져와야 하니까\n        // 왼쪽은 가져올거를 써주고 = 오른쪽은 어디에서 가져올지 써줌\n\n        // const { } = 객체;\n        // console.log(id);\n\n        // constructor 를 쓸 때는 밖에 state 값을 따로 쓰지 않고 안에 같이 적어준다.\n        this.state = { \n            result: null,\n            loading: true,\n            error: null,\n            isMovie: ( pathname.includes(\"movie\") )\n            // include 자체가 true, false를 알아서 구분\n        };\n    }\n    \n    async componentDidMount() {\n        const { match: { params : { id } } } = this.props;\n        // const result = await moviesApi.movieDetail(id);\n        if ( this.state.isMovie ){\n            const result = await moviesApi.movieDetail(id);\n            this.setState({result : result.data, loading: false});\n        } else {\n            const result = await tvApi.showDetail(id);\n            this.setState({result : result.data, loading: false});\n        }\n        // result 라는 변수에 moviesApi의 movieDetail 의 id 값을 가져옴 넣는거지\n        \n        // this.setState({result});\n        \n        // console.log(result)\n\n    }\n\n\n\n    render(){\n        // console.log(this.state);\n        const { result, error, loading, isMovie } = this.state;\n        return <DetailPresenter \n                result={result} \n                error={error}\n                loading={loading}\n                isMovie={isMovie}\n                />\n    }\n\n}\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Header from 'Components/Header';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\n// import TVDetail from 'Routes/TVDetail';\n\nexport default () => (\n    <Router>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/tv\" exact component={TV}/>\n            {/* <Route path=\"/show/:id\" exact component={TVDetail}/> */}\n            <Route path=\"/show/:id\" exact component={Detail}/>\n            <Route path=\"/movie/:id\" exact component={Detail}/>\n            <Route path=\"/search\" exact component={Search}/>\n            <Redirect from=\"*\" to=\"/\"/>\n        </Switch>\n    </Router>  \n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu;\n        font-size: 12px;\n        background: rgba(20, 20, 20, 1);\n        color: #fff;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}